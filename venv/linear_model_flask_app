from flask import Flask


app= Flask(__name__)

@app.route('/') # http://localhost:5001/

def home():
    import pandas as pd
    import numpy as np
    pay_data = pd.read_csv('H:\model_pay_data.csv')
    # In[3]:
    pay_data.dropna(how='any', axis=0, inplace=True)
    # In[4]:
    pay_data = pay_data[pay_data.loads !=0]
    pay_data = pay_data[pay_data.trucks !=0]
    # In[5]:
    pay_data.describe()

    # In[95]:

    dataset= pay_data[['weight', 'avgLaneSpotRate', 'avgHistoricSpotRate']]
    dataset['ltr'] = pay_data['loads']/pay_data['trucks']
    dataset['totalPay'] = pay_data['totalPay']
    dataset.corr()
    from sklearn.preprocessing import StandardScaler
    scaler = StandardScaler()
    scaled_dataset= scaler.fit_transform(dataset)
    scaled_dataset= pd.DataFrame(scaled_dataset)
    scaled_dataset.describe()


    # In[96]:


    from sklearn.model_selection import train_test_split
    training_set, testing_set = train_test_split(scaled_dataset, test_size = 0.2, random_state = 42)
    x_train = training_set.iloc[:, 0:4]
    x_train.describe()


    # In[97]:


    y_train = training_set.iloc[:, 4:5]
    x_test = testing_set.iloc[:, 0:4]
    y_test= testing_set.iloc[:, 4:5]
    y_test.describe()


    # In[98]:


    from sklearn.linear_model import LinearRegression
    linear_model= LinearRegression()
    fit = linear_model.fit(x_train, y_train)
    predicted = fit.predict(x_test)
    from sklearn.metrics import r2_score
    from sklearn.metrics import mean_squared_error
    r2_score = r2_score(y_pred=predicted, y_true=y_test)


    # In[99]:


    mean_squared_error(y_pred=predicted, y_true=y_test)
    return str(r2_score)


app.run(port= 5001)
